{"version":3,"file":"vue.js","sources":["../src/observer/dep.js","../src/utils.js","../src/observer/array.js","../src/observer/index.js","../src/observer/watcher.js","../src/index.js"],"sourcesContent":["export default class Dep {\r\n    subs = [] // 存放当前的依赖 watcher 实例\r\n    static target = null // 用于存放当前属性\r\n    constructor(){\r\n\r\n    }\r\n    // 添加依赖\r\n    addSub(){\r\n    }\r\n\r\n    // 收集依赖\r\n    depend(){\r\n        if(Dep.target && !this.subs.includes(Dep.target)){\r\n            this.subs.push(Dep.target)\r\n        }\r\n    }\r\n    // 通知依赖\r\n    notify(){\r\n        for (const watcher of this.subs) {\r\n            watcher.update()\r\n        }\r\n    }\r\n}","export function isObject(value){\r\n    // 此处 value !== null ?? 多此一举吧\r\n    return typeof value === 'object' && value !== null;\r\n}","// 创建一个自己的数组原型\r\n\r\nexport const myArrayPrototype = Object.create(Array.prototype)\r\n\r\nconst reactMethods = [\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'splice', // (开始下标，删除个数，添加数据)\r\n    'sort',\r\n    'reverse'\r\n]\r\n//  添加变异方法\r\n\r\n// 新增数据也要做响应式处理\r\n\r\nfor (const method of reactMethods) {\r\n    Object.defineProperty(myArrayPrototype,method,{\r\n        configurable: true, // \r\n        enumerable: false,\r\n        writable:true,\r\n        value: function reactMethods(...args){\r\n            // 先保留原有的功能\r\n           const OriginReturnValue =  Array.prototype[method].call(this, ...args)\r\n\r\n            console.log(`监听调用的数组的${method}方法`);\r\n\r\n            let inserted = []\r\n            switch (method) {\r\n                case 'push':\r\n                case 'unshift': {\r\n                    inserted  = args.slice(2)\r\n                    break;\r\n                }                       \r\n                default:\r\n                    break;\r\n            }\r\n\r\n            // 给添加的元素做响应式处理\r\n            this.__ob__.observeArray(inserted)\r\n\r\n            // 通知数组响应式\r\n            this.__ob__.dep.notify(this,this)\r\n            // 方法的返回值要保留\r\n            return  OriginReturnValue\r\n        }\r\n    })\r\n    \r\n}\r\n","import Dep from \"./dep\";\r\nimport { isObject } from \"../utils\";\r\nimport { myArrayPrototype } from \"./array\";\r\n\r\n// window.deps = []\r\n// \r\nfunction dependArray(arr){\r\n  for (const item of arr) {\r\n    if(item.__ob__){\r\n      item.__ob__.dep.depend()\r\n    }\r\n    // 如果里面是数组，又要去调用自己\r\n    if(Array.isArray(item)){\r\n      dependArray(item)\r\n    }\r\n  }\r\n}\r\n\r\nexport function defineReactive(obj, key, val, cb) {\r\n    const dep = new Dep()\r\n    // window.deps.push(dep)\r\n  // obj中的每一个key 都有 闭包val\r\n  // observe(val)\r\n\r\n  const childOb = observe(val);\r\n\r\n  Object.defineProperty(obj, key, {\r\n    // 公共描述符\r\n    configurable: true,\r\n    enumerable:true,\r\n    // 触发的b1的setter ，就会触发b1的dep的notify\r\n    // 由于此时也需要通知b的watcher\r\n    // 需要\r\n    get() {\r\n      console.log(`观察：在获取${key}的值${val}`);\r\n      dep.depend()\r\n      // console.log('definePro观察者',dep.subs)\r\n\r\n      // 重点理解，这里一定要收集\r\n      if(childOb){\r\n        // 将当前的watcher 收集到当前对象的__obj__中，\r\n        // \r\n        childOb.dep.depend()\r\n      }\r\n      // 此处 obj[key]栈溢出？？？\r\n      return val;\r\n    },\r\n    set(newValue) {\r\n      // console.log(`观察：在这里改变了${val}`);\r\n      // 新值旧值一样不触发\r\n      if(newValue === val) return\r\n      // 这个赋值的东西也可能是{}\r\n      observe(newValue)    \r\n      \r\n      const oldValue = val\r\n      \r\n      val = newValue;\r\n      cb && cb(newValue,oldValue);\r\n    \r\n      // 当数据发生变化的时候，通知收集好的所有依赖，将最新的值传过来\r\n      dep.notify()\r\n\r\n      // obj.__ob__.dep.notify(newValue,oldValue)\r\n     \r\n    },\r\n  });\r\n}\r\n\r\nexport class Observer {\r\n  dep;\r\n  constructor(data) {\r\n    this.dep = new Dep()\r\n\r\n    // 通过数据 找到Observer对象\r\n    Object.defineProperty(data,'__ob__',{\r\n      value: this\r\n    })\r\n\r\n    // 处理数组\r\n    if(Array.isArray(data)){\r\n\r\n      // 要去修改原型，成自己的数组原型\r\n      Object.setPrototypeOf(data,myArrayPrototype)\r\n      this.observeArray(data)\r\n    }else{\r\n      this.walk(data);\r\n    }\r\n    \r\n  }\r\n  // 方法\r\n  walk(data) {\r\n    for (const [key, value] of Object.entries(data)) {\r\n      defineReactive(data, key, value);\r\n    }\r\n  }\r\n\r\n  observeArray(data){\r\n    for (const value of data) {\r\n      observe(value)\r\n    }\r\n  }\r\n}\r\n\r\nexport function observe(data) {\r\n  // 类型判断，这里没考虑数组\r\n // if(typeof data  !== 'object' || data === null) return ;\r\n  if(!isObject(data)) return;\r\n\r\n  if(typeof data.__ob__ === 'undefined'){\r\n    return new Observer(data);\r\n  }\r\n\r\n  return data.__ob__;\r\n}\r\n","import Dep from \"./dep.js\";\r\n\r\nfunction parsePath(path){\r\n  const keys = path.split('.') // ['a','b','c']\r\n  return function(obj){\r\n    for (const key of keys) {\r\n      obj = obj[key]\r\n    }\r\n    return obj\r\n  }\r\n}\r\n\r\nexport default class watcher {\r\n  vm;\r\n  exp;\r\n  cb;\r\n  value; // 计算属性的value.缓存的\r\n  getter; // 用于 支持watch 的.语法\r\n  lazy = false; // 懒数据\r\n  dirty = false; // 脏数据，数据变化，computed数据没有发生变化\r\n\r\n  constructor(vm, exp, cb, options = {}) {\r\n    this.vm = vm;\r\n    this.exp = exp;\r\n    this.cb = cb;\r\n\r\n    console.log('watch exp',typeof exp);\r\n    \r\n    if(typeof exp === 'function'){\r\n      this.getter = exp\r\n    }else{\r\n      this.getter = parsePath(this.exp)\r\n    }\r\n\r\n    this.getter =  parsePath(this.exp) // 支持watch 的点语法\r\n\r\n    this.lazy = !!options.lazy;\r\n    // 如果刚开始是懒惰的，就不会计算，所以第一次应该获取为dirty = true\r\n    this.dirty = this.lazy;\r\n    // 不是lazy 才需要获取，重新计算\r\n    if (!this.lazy) {\r\n      this.value = this.get(); // 要存起来\r\n    }\r\n  }\r\n  get() {\r\n    // 先把watcher 存到一个公共的地方\r\n    Dep.target = this;\r\n    // const _data = ;\r\n    let value = this.getter.call(this.vm,this.vm._data);\r\n\r\n    // if (typeof this.exp === \"function\") {\r\n    //   value = this.exp.call(this.vm);\r\n    // } else {\r\n    //   value = _data[this.exp];\r\n    // }\r\n    // _data[this.exp] 触发 =》get => dep.depend() =>\r\n\r\n    // 收集完成之后清空\r\n    Dep.target = null;\r\n    return value;\r\n  }\r\n  // 给Dep的notify\r\n  update() {\r\n    // 是懒惰的，说明是计算属性，\r\n    // 先标记为肮脏\r\n    if (this.lazy) {\r\n      this.dirty = true;\r\n    } else {\r\n      // this.cb && this.cb(this.vm, newValue, oldValue);\r\n      this.run()\r\n    }\r\n  }\r\n\r\n  run(){\r\n    // 存储旧值\r\n    const oldValue =  this.value;\r\n    // 新的值，获取并且覆盖\r\n    this.value = this.get()\r\n\r\n    if(this.value !== oldValue){\r\n      this.cb && this.cb.call(this.vm,this.value,oldValue)\r\n    }\r\n  }\r\n}\r\n","import { observe, defineReactive } from \"./observer/index\";\r\nimport Watcher from \"./observer/watcher\";\r\n\r\n// 代理,代理这里是不可以defineReactive()会导致取值复制失效\r\n// 此处代理\r\nfunction _proxy(data) {\r\n  // 箭头函数内的this,是外层的this\r\n  //   Object.keys(data).forEach((key) => {\r\n  //     Object.defineProperty(this, key, {\r\n  //       get() {\r\n  //         console.log(`代理对象获取${data[key]}`)\r\n  //         return data[key];\r\n  //       },\r\n  //       set(newData) {\r\n  //         // 这里是一定要data[key]\r\n  //         data[key] = newData;\r\n  //         console.log(\"代理:值改变\", data[key]);\r\n  //       },\r\n  //     });\r\n  //   });\r\n  for (const key of Object.keys(data)) {\r\n    Object.defineProperty(this, key, {\r\n      get() {\r\n        // console.log(`代理对象获取${data[key]}`);\r\n        return data[key];\r\n      },\r\n      set(newData) {\r\n        // 这里是一定要data[key]\r\n        data[key] = newData;\r\n        // console.log(\"代理:值改变\", data[key]);\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nfunction initData(vm) {\r\n  // 观察_data上的键值存取操作\r\n  observe(vm._data);\r\n  // 数据代理，可以通过实例直接访问\r\n  _proxy.call(vm, vm._data);\r\n}\r\n\r\nfunction initWatch(vm,watch){\r\n    if(watch){\r\n      const entries = Object.entries(watch)\r\n      // console.log('打印他的enti',  entries.length);\r\n      for (const [key,value] of entries) {\r\n          new Watcher(vm,key,value)\r\n      }\r\n    }\r\n}\r\n\r\nfunction initComputed(vm,computed){\r\n  // const {computed} = options\r\n  if(computed){\r\n    for (const [name,fn] of Object.entries(computed)) {\r\n    const watcher = new Watcher(vm,fn,undefined,{\r\n      lazy: true\r\n    })\r\n      \r\n      Object.defineProperty(vm,name,{\r\n        configurable: true,\r\n        enumerable: true,\r\n        get(){\r\n          if(watcher.dirty){\r\n            console.log('获取计算属性的值');\r\n            watcher.value = watcher.get() // 不要get 会出现重复收集的情况\r\n            watcher.dirty = false\r\n          }\r\n          return watcher.value\r\n        },\r\n        set(){\r\n          console.log('计算属性不可设值');\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n// vue 用function，不用class的原因，function可枚举\r\nfunction Vue(options) {\r\n  const vm = this;\r\n  vm.$options = options;\r\n  vm._data = typeof options.data === \"function\" ? options.data(): options.data;\r\n \r\n  initData(vm); // 直接调用this指向window,用call改变this\r\n  initComputed(vm,options.computed)\r\n  initWatch(vm,options.watch); // 以传参的方式是不需要改变call的指向\r\n  \r\n\r\n}\r\n\r\n// 这里 function 不能用箭头函数，箭头函数向上找this 这里的是 window,\r\nVue.prototype.$watch = function(exp,cb) {\r\n    new Watcher(this,exp,cb)\r\n}\r\n\r\n// 这里要做到一件事情，就是改变有响应式的属性的值时候，不能触发\r\n// 但是，新增的话，就需要触发他的watch ,添加响应式\r\nVue.prototype.$set = function(obj,key,value) {\r\n  const hasKey = Object.keys(obj).includes(key)\r\n  \r\n  // 添加这个属性,并做响应式处理\r\n  defineReactive(obj, key, value)\r\n  // obj变了，通知所有的watcher\r\n  if(!hasKey){\r\n    // 只有当该对象中没有的时候，才会触发通知\r\n    obj.__ob__.dep.notify()\r\n  }\r\n}\r\n\r\nexport default Vue;\r\n"],"names":["Dep","subs","target","constructor","addSub","depend","includes","push","notify","watcher","update","isObject","value","myArrayPrototype","Object","create","Array","prototype","reactMethods","method","defineProperty","configurable","enumerable","writable","args","OriginReturnValue","call","console","log","inserted","slice","__ob__","observeArray","dep","defineReactive","obj","key","val","cb","childOb","observe","get","set","newValue","oldValue","Observer","data","isArray","setPrototypeOf","walk","entries","parsePath","path","keys","split","vm","exp","getter","lazy","dirty","options","_data","run","_proxy","newData","initData","initWatch","watch","Watcher","initComputed","computed","name","fn","undefined","Vue","$options","$watch","$set","hasKey"],"mappings":"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"}